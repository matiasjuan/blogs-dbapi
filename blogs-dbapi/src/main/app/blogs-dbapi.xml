<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">

    <jdbc-ee:mysql-data-source name="MySQL_Data_Source" user="examplemysqlapi" 
    	password="examplemysqlapi" url="jdbc:mysql://localhost:3306/examplemysqlapi" 
    	transactionIsolation="UNSPECIFIED" doc:name="MySQL Data Source"/>
    <jdbc-ee:connector name="MySQLDatabase" dataSource-ref="MySQL_Data_Source" validateConnections="true" queryTimeout="-1" pollingFrequency="0" doc:name="Database">
        <jdbc-ee:query key="findBaskets" value="SELECT 
  bk.id as id, 
  bk.datecreated, 
  bk.datecheckout, 
  ac.id as accountId, 
  ( SELECT COUNT(productId) FROM basketProduct WHERE basketId = bk.id) as productcount,
  ( SELECT SUM(quantity) FROM basketProduct WHERE basketId = bk.id) as totalitems,
  ( SELECT sum( bp.quantity * p.price ) FROM basketProduct bp, product p where bp.productId = p.id and bp.basketId = bk.id ) as purchaseTotal,
  concat(ac.last_Name, ', ', ac.first_Name) as accountName, 
  ac.email
FROM basket bk, accounts ac
WHERE bk.accountId = ac.id"/>

        <jdbc-ee:query key="findBasket" value="SELECT bp.basketId, bp.productId, p.shortName as productName, p.price as unitPrice, bp.quantity, (bp.quantity * p.price) as subTotal
FROM basketProduct bp , product p
WHERE bp.productId = p.id and bp.basketId = #[basketId]"/>        
    </jdbc-ee:connector>
    <flow name="findBaskets" doc:name="findBaskets">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="mydbapi/baskets/" doc:name="mydbapi/baskets/"/>
        <choice doc:name="Choice">
            <when expression="#[regex:\b[/myexample/basket/]+[0-9]]">
                <expression-transformer expression="#[message.inboundProperties['http.relative.path']]" doc:name="Get relative path"/>
        		<set-variable variableName="basketId" value="#[payload]" doc:name="set basket id"/>
                <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="findBasket" queryTimeout="-1" connector-ref="MySQLDatabase" doc:name="Find Basket"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </when>
            <otherwise>
                <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="findBaskets" queryTimeout="-1" connector-ref="MySQLDatabase" doc:name="Find Baskets"/>
                <json:object-to-json-transformer doc:name="DB results to JSON"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="blog-db-apiFlow1" doc:name="blog-db-apiFlow1">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="myapplication" doc:name="My Application"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="mydbapi/baskets/" method="GET" doc:name="My API consumer"/>
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <mulexml:object-to-xml-transformer doc:name="Object to XML"/>
    </flow>
</mule>
